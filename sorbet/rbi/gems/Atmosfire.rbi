# This file is autogenerated. Do not edit it by hand. Regenerate it with:
#   srb rbi gems

# typed: false
#
# If you would like to make changes to this file, great! Please create the gem's shim here:
#
#   https://github.com/sorbet/sorbet-typed/new/master?filename=lib/Atmosfire/all/Atmosfire.rbi
#
# Atmosfire-0.0.2

module Atmosfire
end
class Atmosfire::Error < StandardError
end
class Atmosfire::HTTPError < Atmosfire::Error
end
class Atmosfire::UnauthorizedError < Atmosfire::HTTPError
end
module Atmosfire::RequestUtils
  def at_uri(*args, **, &blk); end
  def create_session_uri(pds); end
  def default_authenticated_headers(session); end
  def default_headers; end
  def delete_record_uri(pds); end
  def delete_session_uri(pds); end
  def get_post_thread_uri(pds, query); end
  def get_session_uri(pds); end
  def mute_actor_uri(pds); end
  def query_obj_to_query_params(q); end
  def refresh_session_uri(pds); end
  def refresh_token_headers(session); end
  def resolve_handle(username, pds = nil); end
  def upload_blob_uri(pds); end
  extend T::Private::Methods::MethodHooks
  extend T::Private::Methods::SingletonMethodHooks
  extend T::Sig
  include Kernel
end
class Atmosfire::Credentials < Struct
  def initialize(*args, **, &blk); end
  def pds; end
  def pds=(_); end
  def pw; end
  def pw=(_); end
  def self.[](*arg0); end
  def self.inspect; end
  def self.keyword_init?; end
  def self.members; end
  def self.new(*arg0); end
  def username; end
  def username=(_); end
  extend T::Private::Methods::MethodHooks
  extend T::Private::Methods::SingletonMethodHooks
  extend T::Sig
end
class Atmosfire::Session
  def access_token; end
  def delete!; end
  def did; end
  def get_session(*args, **, &blk); end
  def initialize(*args, **, &blk); end
  def open!; end
  def pds; end
  def refresh!; end
  def refresh_token; end
  def xrpc; end
  extend T::Private::Methods::MethodHooks
  extend T::Private::Methods::SingletonMethodHooks
  extend T::Sig
  include Atmosfire::RequestUtils
end
class Atmosfire::Repo
  def [](*args, **, &blk); end
  def describe_repo(*args, **, &blk); end
  def did; end
  def did_document(*args, **, &blk); end
  def initialize(*args, **, &blk); end
  def open!; end
  def pds; end
  def pds_endpoint; end
  def record_list; end
  def to_s; end
  def to_uri(*args, **, &blk); end
  extend T::Private::Methods::MethodHooks
  extend T::Private::Methods::SingletonMethodHooks
  extend T::Sig
  include Atmosfire::RequestUtils
end
class Atmosfire::Repo::Collection < T::Struct
  def [](*args, **, &blk); end
  def __t_props_generated_deserialize(*args, **); end
  def __t_props_generated_serialize(*args, **); end
  def collection; end
  def list(*args, **, &blk); end
  def repo; end
  def self.inherited(s); end
  def to_s(*args, **, &blk); end
  def to_uri(*args, **, &blk); end
  extend T::Private::Methods::MethodHooks
  extend T::Private::Methods::SingletonMethodHooks
  extend T::Props::ClassMethods
  extend T::Props::Plugin::ClassMethods
  extend T::Props::Plugin::ClassMethods
  extend T::Props::Plugin::ClassMethods
  extend T::Props::Plugin::ClassMethods
  extend T::Props::Plugin::ClassMethods
  extend T::Props::Serializable::ClassMethods
  extend T::Sig
  include Atmosfire::RequestUtils
end
class Atmosfire::Record < Struct
  def cid; end
  def cid=(_); end
  def content; end
  def content=(_); end
  def delete(*args, **, &blk); end
  def put(session); end
  def refresh(pds = nil); end
  def self.[](*arg0); end
  def self.create(*args, **, &blk); end
  def self.from_hash(*args, **, &blk); end
  def self.from_uri(*args, **, &blk); end
  def self.inspect; end
  def self.keyword_init?; end
  def self.members; end
  def self.new(*arg0); end
  def timestamp; end
  def timestamp=(_); end
  def update(*args, **, &blk); end
  def uri; end
  def uri=(_); end
  extend T::Private::Methods::MethodHooks
  extend T::Private::Methods::SingletonMethodHooks
  extend T::Sig
end
module Atmosfire::AtUriParser
  def self.create_rule(pattern, &block); end
  def self.parse(*args, **, &blk); end
  extend T::Private::Methods::MethodHooks
  extend T::Private::Methods::SingletonMethodHooks
  extend T::Sig
  include Atmosfire::RequestUtils
end
class Atmosfire::AtUriParser::Rule < Struct
  def pattern; end
  def pattern=(_); end
  def self.[](*arg0); end
  def self.inspect; end
  def self.keyword_init?; end
  def self.members; end
  def self.new(*arg0); end
  def transform; end
  def transform=(_); end
end
class Atmosfire::AtUri < T::Struct
  def __t_props_generated_deserialize(*args, **); end
  def __t_props_generated_serialize(*args, **); end
  def collection; end
  def repo; end
  def rkey; end
  def self.inherited(s); end
  def to_s(*args, **, &blk); end
  extend T::Private::Methods::MethodHooks
  extend T::Private::Methods::SingletonMethodHooks
  extend T::Props::ClassMethods
  extend T::Props::Plugin::ClassMethods
  extend T::Props::Plugin::ClassMethods
  extend T::Props::Plugin::ClassMethods
  extend T::Props::Plugin::ClassMethods
  extend T::Props::Plugin::ClassMethods
  extend T::Props::Serializable::ClassMethods
  extend T::Sig
end
